/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import "UIActionSheetDelegate.h"
#import "UIKit-Structs.h"
#import "UIAutoscrollContainer.h"
#import "UIKeyboardInput.h"
#import "UIWebDocumentView.h"
#import "UIModalViewDelegate.h"
#import "BrowserDocumentController.h"
#import "UITextSelectingContent.h"
#import "UIWebTiledView.h"
#import <Availability2.h>

@class UITextInputTraits, UIWebSelectionAssistant, WebViewReachabilityObserver, WebThreadSafeUndoManager, UIAutoscroll, WebView, DOMHTMLElement, UITextInteractionAssistant, UITextSelectionView, UIColor, CALayer, UIWebFormDelegate, UIInformalDelegate, WebPDFView, DOMNode;
@protocol UIFormAssistantDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIKeyboardInput, UIModalViewDelegate> {
	int _retainCount;
	WKWindow* _wkWindow;
	WebView* _webView;
	WebViewReachabilityObserver* _reachabilityObserver;
	id m_parentTextView;
	id _delegate;
	id _textSuggestionDelegate;
	id _editingDelegate;
	float _doubleTapDelay;
	CGRect _doubleTapRect;
	CGRect _mainDocumentDoubleTapRect;
	CGPoint _scrollPoint;
	CGPoint _doubleTapStartPosition;
	double _doubleTapStartTime;
	CGSize _pendingSize;
	int _orientation;
	DOMHTMLElement* _standaloneEditingElement;
	CGPoint _mouseDownPoint;
	double _mouseDownTime;
	UIAutoscroll* _autoscroll;
	CFDictionaryRef _plugInViews;
	int m_selectionGranularity;
	BOOL m_selectionGranularityIncreasing;
	CALayer* _contentLayersHostingLayer;
	UITextInputTraits* _traits;
	struct {
		NSMutableArray* all;
		NSMutableArray* html;
		NSMutableArray* javascript;
		NSMutableArray* css;
		NSMutableArray* error;
		NSMutableArray* warning;
		NSMutableArray* tip;
		NSMutableArray* log;
	} _messages;
	struct {
		unsigned isEdited : 1;
		unsigned allowsUnapprovedFocus : 1;
		unsigned isAutoFilling : 1;
		id<UIFormAssistantDelegate> delegate;
		UIWebFormDelegate* formDelegate;
	} _forms;
	struct {
		NSTimer* timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		BOOL isGestureScrolling;
		CGPoint gestureScrollPoint;
		CGPoint gestureCurrentPoint;
		BOOL hasAttemptedGestureScrolling;
		UIView* candidate;
		BOOL forwardingGuard;
		SEL mouseUpForwarder;
		SEL mouseDraggedForwarder;
		DOMNode* element;
		BOOL defersCallbacksState;
		UIInformalDelegate* delegate;
		int interactionSheetType;
		UIActionSheet* interactionSheet;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		struct {
			BOOL active;
			BOOL defaultPrevented;
			NSMutableArray* regions;
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_3_1
			float originalGestureDistance;
			float originalGestureAngle;
#endif
		} directEvents;
	} _interaction;
	struct {
		WebPDFView* view;
		NSTimer* timer;
	} _pdf;
	struct {
		CGSize size;
		float initialScale;
		float minimumScale;
		float maximumScale;
		BOOL allowsUserScaling;
	} _viewportConfigurations[6];
	CGSize _minimumSize;
	int _documentType;
	float _documentScale;
	CGRect _documentBounds;
	int _enabledGestures;
	unsigned _customConfigurations;
	unsigned _mouseDownCount;
	unsigned _dataDetectorTypes;
	unsigned _webCoreNeedsSetNeedsDisplay : 1;
	unsigned _webCoreNeedsDraw : 1;
	unsigned _ignoresFocusingMouse : 1;
	unsigned _ignoresKeyEvents : 1;
	unsigned _autoresizes : 1;
	unsigned _scalesToFit : 1;
	unsigned _hasCustomScale : 1;
	unsigned _userScrolled : 1;
	unsigned _pageNeedsReset : 1;
	unsigned _hasScrollPoint : 1;
	unsigned _setNeedsDisplayWasForced : 1;
	unsigned _gesturesDisabled : 1;
	unsigned _doubleTapRectIsReplaced : 1;
	unsigned _standaloneEditableView : 1;
	unsigned _widgetEditingView : 1;
	unsigned _mouseDragged : 1;
	unsigned _mouseReentrancyGuard : 1;
	unsigned _isShowingFullScreenPlugIn : 1;
	unsigned _isSettingRedrawFrame : 1;
	unsigned _needsScrollNotifications : 1;
	unsigned _loadsSynchronously : 1;
	unsigned _mouseDown : 1;
	unsigned _usePreTimberlineTransparencyBehavior : 1;
	unsigned _geolocationDialogAllowed : 1;
	unsigned _usingMinimalTilesDuringLoading : 1;
	unsigned _sheetsCount : 2;
	unsigned _didFirstVisuallyNonEmptyLayout : 1;
	unsigned _loadInProgress : 1;
	unsigned _uiwdvIsResigningFirstResponder : 1;
	WebThreadSafeUndoManager* _undoManager;
	UIWebSelectionAssistant* _webSelectionAssistant;
	UITextInteractionAssistant* _textSelectionAssistant;
	UITextSelectionView* _textSelectionView;
	UIEdgeInsets _caretInsets;
}
@property(assign, nonatomic) UITextAutocapitalizationType autocapitalizationType;
@property(assign, nonatomic) UITextAutocorrectionType autocorrectionType;
@property(assign, nonatomic) UIKeyboardType keyboardType;
@property(assign, nonatomic) UIKeyboardAppearance keyboardAppearance;
@property(assign, nonatomic) UIReturnKeyType returnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;
@property(retain, nonatomic) UIColor* insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(assign, nonatomic) int textLoupeVisibility;
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;
@property(assign, nonatomic) BOOL contentsIsSingleValue;
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(readonly, assign, nonatomic) UITextSelectionView* selectionView;
@property(readonly, assign, nonatomic) UITextInteractionAssistant* interactionAssistant;
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent>* content;
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;
+(Class)layerClass;
+(id)standardTextViewPreferences;
-(id)_doubleTapSpeedFromDefaults;
-(void)_restoreViewportSettingsWithSize:(CGSize)size;
-(id)initSimpleHTMLDocumentWithStyle:(id)style editable:(BOOL)editable withFrame:(CGRect)frame withPreferences:(id)preferences;
-(id)initWithFrame:(CGRect)frame;
-(id)commonInitWithFrame:(CGRect)frame;
-(void)enableReachability;
-(void)dealloc;
-(id)retain;
-(void)release;
-(unsigned)retainCount;
-(void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;
-(void)removeFromSuperview;
-(void)stopLoading:(id)loading;
-(void)setDelegate:(id)delegate;
-(void)loadRequest:(id)request;
-(void)loadHTMLString:(id)string baseURL:(id)url;
-(void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;
-(void)setLoadsSynchronously:(BOOL)synchronously;
-(BOOL)loadsSynchronously;
-(id)webView;
-(void)setUserStyleSheet:(id)sheet;
-(void)setDetectsPhoneNumbers:(BOOL)numbers;
-(BOOL)detectsPhoneNumbers;
-(BOOL)_dataDetectionIsActivated;
-(unsigned)effectiveDataDetectorTypes;
-(void)setDataDetectorTypes:(unsigned)types;
-(unsigned)dataDetectorTypes;
-(void)setUsePreTimberlineTransparencyBehavior;
-(void)setFrame:(CGRect)frame;
-(float)integralScaleForScale:(float)scale;
-(void)_setDocumentScale:(float)scale;
-(float)viewportWidth;
-(float)viewportHeight;
-(float)minimumScaleForMinimumSize:(CGSize)minimumSize;
-(float)initialScale;
-(float)minimumScale;
-(void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;
-(void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations;
-(void)_setDocumentType:(int)type;
-(void)_updateSize;
-(void)_clearDoubleTapRect;
-(void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;
-(void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;
-(BOOL)needsScrollNotifications;
-(void)enclosingScrollerDidScroll;
-(void)resetTilingAfterLoadComplete;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webViewDidLayout:(id)webView;
-(void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;
-(void)_WAKViewSizeDidChange:(id)_WAKViewSize;
-(void)setEnabledGestures:(int)gestures;
-(int)enabledGestures;
-(CGRect)documentBounds;
-(void)setAutoresizes:(BOOL)autoresizes;
-(void)setMinimumSize:(CGSize)size;
-(void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;
-(void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;
-(void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;
-(void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;
-(void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;
-(BOOL)_updatesScroller;
-(void)_setScrollerOffset:(CGPoint)offset;
-(void)_restoreScrollPointForce:(BOOL)force;
-(void)_resetForNewPage;
-(void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;
-(void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;
-(BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;
-(CGPoint)contentsPointForWebView:(id)webView __OSX_AVAILABLE_STARTING(__MAC_NA, __IPHONE_3_1);
-(CGRect)documentVisibleRectForWebView:(id)webView __OSX_AVAILABLE_STARTING(__MAC_NA, __IPHONE_3_1);
-(CGPoint)contentsPointForWebView:(id)webView;
-(CGRect)documentVisibleRectForWebView:(id)webView;
-(void)_didMoveFromWindow:(id)window toWindow:(id)window2;
-(void)forceLayout;
-(void)layoutSubviews;
-(void)setNeedsDisplayInRect:(CGRect)rect;
-(void)setNeedsDisplay;
-(void)setSmoothsFonts:(BOOL)fonts;
-(void)setDrawsBackground:(BOOL)background;
-(void)setOpaque:(BOOL)opaque;
-(CGImageRef)createSnapshotWithRect:(CGRect)rect;
-(BOOL)cancelMouseTracking;
-(BOOL)cancelTouchTracking;
-(void)setIgnoresFocusingMouse:(BOOL)mouse;
-(void)setIgnoresKeyEvents:(BOOL)events;
-(void)setTilingArea:(int)area;
-(void)_didScroll;
-(void)_sendInternalEvent:(GSEventRef)event;
-(CGPoint)_viewportLocationForEvent:(GSEventRef)event;
-(BOOL)_isSubviewOfPlugInView:(id)view;
-(id)hitTest:(CGPoint)test forEvent:(GSEventRef)event;
-(void)setDoubleTapDelay:(float)delay;
-(float)doubleTapDelay;
-(void)keyUp:(GSEventRef)up;
-(void)keyDown:(GSEventRef)down;
-(void)gestureStarted:(GSEventRef)started;
-(void)gestureChanged:(GSEventRef)changed;
-(void)gestureEnded:(GSEventRef)ended;
-(void)_notifyPlugInViewsOfScaleChange;
-(void)_notifyContentHostingLayersOfScaleChange;
-(void)revealedSelectionByScrollingWebFrame:(id)frame;
-(void)webView:(id)view attachRootLayer:(id)layer;
-(void)zoomToScale:(float)scale;
-(void)_reshapePlugInViews;
-(void)redrawScaledDocument;
-(void)setOrientation:(int)orientation;
-(void)_zoomToNode:(id)node;
-(void)scrollCaretToVisible:(id)visible;
-(CGPoint)_centeredScrollPointForPoint:(CGPoint)point scale:(float)scale;
-(CGPoint)_doubleTapScrollPointForRect:(CGRect)rect scale:(float)scale event:(GSEventRef)event;
-(float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width;
-(BOOL)_doubleTapZoomToRect:(CGRect)rect scale:(float)scale fromEvent:(GSEventRef)event;
-(void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect*)rect;
-(void)_handleDoubleTapAtPoint:(CGPoint)point inWebPDFView:(id)webPDFView outRenderRect:(CGRect*)rect;
-(void)doubleTap:(GSEventRef)tap;
-(CGRect)doubleTapRect;
-(BOOL)doubleTapRectIsReplaced;
-(void)setIsStandaloneEditableView:(BOOL)view;
-(BOOL)isStandaloneEditableView;
-(void)setStandaloneEditingElement:(id)element;
-(id)standaloneEditingElement;
-(void)setIsWidgetEditingView:(BOOL)view;
-(BOOL)isWidgetEditingView;
-(BOOL)updateKeyboardStateOnResponderChanges;
-(BOOL)canBecomeFirstResponder;
-(BOOL)canResignFirstResponder;
-(BOOL)becomeFirstResponder;
-(void)deferredBecomeFirstResponder;
-(BOOL)resignFirstResponder;
-(id)_responderForBecomeFirstResponder;
-(BOOL)makeWKFirstResponder;
-(void)ensureSelection;
-(void)setInteractionAssistantGestureRecognizers;
-(void)_undoManagerDidUndo:(id)_undoManager;
-(void)_undoManagerDidRedo:(id)_undoManager;
-(void)_undoManagerWillUndo:(id)_undoManager;
-(void)_undoManagerWillRedo:(id)_undoManager;
-(id)undoManagerForWebView:(id)webView;
-(id)undoManager;
-(id)_parentTextView;
-(void)_setParentTextView:(id)view;
-(BOOL)_editable;
-(void)_setEditable:(BOOL)editable;
-(id)delegate;
-(void)addInputString:(id)string;
-(void)deleteFromInput;
-(void)deleteBackward;
-(void)insertText:(id)text;
-(void)replaceRangeWithTextWithoutClosingTyping:(NSRange)textWithoutClosingTyping replacementText:(id)text;
-(void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;
-(void)replaceCurrentWordWithText:(id)text;
-(void)setMarkedText:(id)text;
-(void)setMarkedText:(id)text selectedRange:(NSRange)range;
-(void)confirmMarkedText:(id)text;
-(id)markedText;
-(unsigned short)characterInRelationToCaretSelection:(int)caretSelection;
-(unsigned short)characterBeforeCaretSelection;
-(unsigned short)characterAfterCaretSelection;
-(id)fontForCaretSelection;
-(id)textColorForCaretSelection;
-(CGRect)rectForNSRange:(NSRange)nsrange;
-(id)rectsForNSRange:(NSRange)nsrange;
-(CGRect)rectContainingCaretSelection;
-(id)wordRangeContainingCaretSelection;
-(id)wordContainingCaretSelection;
-(id)wordInRange:(id)range;
-(void)expandSelectionToStartOfWordContainingCaretSelection;
-(int)wordOffsetInRange:(id)range;
-(void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;
-(NSRange)markedTextRange;
-(NSRange)selectionRange;
-(id)selectedDOMRange;
-(void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;
-(id)rangeByMovingCurrentSelection:(int)selection;
-(id)rangeByExtendingCurrentSelection:(int)selection;
-(void)extendCurrentSelection:(int)selection;
-(BOOL)hasSelection;
-(BOOL)hasSelectionInPlainTextRegion;
-(BOOL)selectionAtDocumentStart;
-(BOOL)selectionAtSentenceStart;
-(BOOL)selectionAtWordStart;
-(BOOL)rangeAtSentenceStart:(id)sentenceStart;
-(void)moveBackward:(unsigned)backward;
-(void)moveForward:(unsigned)forward;
-(void)selectAll;
-(void)setText:(id)text;
-(id)text;
-(BOOL)hasContent;
-(void)setCaretChangeListener:(id)listener;
-(CGRect)convertCaretRect:(CGRect)rect;
-(id)keyboardInputView;
-(id)implementationWebView;
-(BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;
-(BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;
-(BOOL)keyboardInputShouldDelete:(id)keyboardInput;
-(BOOL)keyboardInputChanged:(id)changed;
-(void)keyboardInputChangedSelection:(id)selection;
-(id)automaticallySelectedOverlay;
-(void)setBottomBufferHeight:(float)height;
-(int)keyboardInput:(id)input positionForAutocorrection:(id)autocorrection;
-(BOOL)isProxyFor:(id)aFor;
-(BOOL)requiresKeyEvents;
-(void)handleKeyEvent:(GSEventRef)event;
-(void)setPaused:(BOOL)paused;
-(id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;
-(void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;
-(void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;
-(void)didRemovePlugInView:(id)view;
-(BOOL)isShowingFullScreenPlugInUI;
-(id)textInputTraits;
-(void)forwardInvocation:(id)invocation;
-(id)methodSignatureForSelector:(SEL)selector;
-(void)takeTraitsFrom:(id)from;
-(void)endSelectionChange;
-(void)beginSelectionChange;
-(void)updateSelection;
-(CGRect)selectionClipRect;
-(void)cut:(id)cut;
-(void)copy:(id)copy;
-(id)_supportedPasteboardTypesForCurrentSelection;
-(id)_documentFragmentForPasteboardItemAtIndex:(int)index;
-(void)paste:(id)paste;
-(void)select:(id)select;
-(void)selectAll:(id)all;
-(BOOL)canPerformAction:(SEL)action withSender:(id)sender;
-(CGRect)visibleFrame;
-(CGRect)visibleContentFrame;
-(CGRect)autoscrollDragFrame;
-(CGRect)autoscrollContentFrame;
-(BOOL)playsNicelyWithGestures;
-(BOOL)becomesEditableWithGestures;
-(void)setBecomesEditableWithGestures:(BOOL)gestures;
-(void)useSelectionAssistantWithMode:(int)mode;
-(void)willStartScroll;
-(void)didEndScroll;
-(void)willStartZoom;
-(void)didEndZoom;
-(BOOL)containsOnlySelectableElements;
-(BOOL)hasSimpleTextOnlyStructure;
-(void)detachSelectionView;
-(void)detachInteractionAssistant;
-(int)selectionState;
@end

@interface UIWebDocumentView (SyntheticEvents)
-(id)_scriptingInfoForLink:(id)link;
-(id)_scriptingInfoForForm:(id)form;
-(id)scriptingInfoWithChildren;
@end

@interface UIWebDocumentView (FieldEditorSupport)
-(id)_parentTextViewForLoupe;
-(BOOL)_usesSingleLineSelectionBehavior;
@end

@interface UIWebDocumentView (Forms) <BrowserDocumentController>
-(void)setAllowsUnapprovedFocus:(BOOL)focus;
-(BOOL)allowsUnapprovedFocus;
-(void)setFormEditingDelegate:(id)delegate;
-(id)formEditingDelegate;
-(id)formAssistant;
-(void)setFormEdited:(BOOL)edited;
-(BOOL)isFormEdited;
-(id)formElement;
-(BOOL)isAutoFilling;
-(void)webViewFormEditedStatusHasChanged:(id)changed;
-(void)webView:(id)view willCloseFrame:(id)frame;
-(void)acceptedAutoFillWord:(id)word;
-(void)autoFillWithElementValue;
-(BOOL)isAutoFillMode;
-(void)_autoFillFrame:(id)frame;
-(void)webView:(id)view didFinishDocumentLoadForFrame:(id)frame;
-(void)webView:(id)view didFirstLayoutInFrame:(id)frame;
@end

@interface UIWebDocumentView (InteractionPrivate)
-(BOOL)canOpenNewPageForURL:(id)url;
-(void)_showImageSheet;
-(void)_showLinkSheet;
-(void)_showDataDetectorsSheet;
@end

@interface UIWebDocumentView (Interaction) <UIActionSheetDelegate>
+(id)_createDefaultHighlightView;
+(id)_highlightView;
-(void)clearInteractionTimer;
-(void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;
-(CGPoint)convertWindowPointToViewport:(CGPoint)viewport;
-(void)mouseDown:(GSEventRef)down;
-(void)mouseUp:(GSEventRef)up;
-(void)mouseDragged:(GSEventRef)dragged;
-(void)interactionMouseUp:(GSEventRef)up;
-(void)_resetInteractionWithLocation:(CGPoint)location;
-(void)startInteractionWithLocation:(CGPoint)location;
-(void)continueInteractionWithLocation:(CGPoint)location;
-(void)tapInteractionWithLocation:(CGPoint)location;
-(void)validateInteractionWithLocation:(CGPoint)location;
-(BOOL)startActionSheet;
-(BOOL)isInInteraction;
-(BOOL)willInteractWithLocation:(CGPoint)location;
-(void)interactionMouseDown:(GSEventRef)down;
-(void)defaultMouseDragged:(GSEventRef)dragged;
-(void)defaultMouseUp:(GSEventRef)up;
-(BOOL)canHandleHandEvent:(GSEventRef)event;
-(BOOL)handleHandEvent:(GSEventRef)event;
-(void)touchesBegan:(id)began withEvent:(id)event;
-(void)touchesMoved:(id)moved withEvent:(id)event;
-(void)touchesEnded:(id)ended withEvent:(id)event;
-(void)touchesCancelled:(id)cancelled withEvent:(id)event;
-(void)webView:(id)view eventRegionsChanged:(id)changed;
-(BOOL)_directEventsHitTest:(CGPoint)test;
-(BOOL)_directEventsCheckEvent:(GSEventRef)event;
-(BOOL)_directEventsProcessEvent:(GSEventRef)event;
-(void)cancelInteractionWithCandidate;
-(BOOL)_interactionCandidateHasCustomHandlerForSelector:(SEL)selector;
-(void)_generateAndForwardUIEventForGSEvent:(GSEventRef)gsevent withTouchPhase:(int)touchPhase;
-(void)forwardMouseUpToInteractionCandidate:(GSEventRef)interactionCandidate;
-(void)forwardMouseDraggedToInteractionCandidate:(GSEventRef)interactionCandidate;
-(void)forwardEventsToInteractionCandidate;
-(void)performCandidateClick:(id)click;
-(void)performClick:(id)click;
-(void)_sendMouseMoveAndAttemptClick:(id)click;
-(void)attemptClick:(id)click;
-(void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;
-(void)webViewDidPreventDefaultForEvent:(id)webView;
-(id)approximateNodeAtViewportLocation:(CGPoint*)viewportLocation;
-(void)highlightApproximateNodeInverted:(BOOL)inverted;
-(void)hideTapHighlight;
-(void)highlightApproximateNodeAndDisplayInfoSheet;
-(void)resetInteraction;
-(void)completeInteraction;
-(void)cancelInteraction;
-(void)deferInteraction;
-(void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;
-(void)_saveImages:(id)images;
-(void)_copyImage:(id)image;
-(void)_copyElement:(id)element;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)sendScrollWheelEvents;
-(BOOL)eventCanTriggerGestureScrolling:(GSEventRef)scrolling;
-(void)setInteractionDelegate:(id)delegate;
-(id)interactionDelegate;
-(void)setAllowsImageSheet:(BOOL)sheet;
-(void)setAllowsDataDetectorsSheet:(BOOL)sheet;
-(id)superviewForSheet;
-(void)_incrementBrowserSheets:(id)sheets;
-(void)_decrementBrowserSheets:(id)sheets;
-(void)showBrowserSheet:(id)sheet;
-(void)hideBrowserSheet:(id)sheet;
-(void)actionWillStart;
-(void)actionDidFinish;
@end

@interface UIWebDocumentView (Messaging)
-(void)webView:(id)view didReceiveMessage:(id)message;
-(void)setAllowsMessaging:(BOOL)messaging;
-(BOOL)allowsMessaging;
-(id)messagesMatchingMask:(int)mask;
-(void)clearMessagesMatchingMask:(int)mask;
@end

@interface UIWebDocumentView (PDF)
+(id)_PDFPageNumberLabel;
-(void)hidePDFPageNumberLabel;
-(void)updatePDFPageNumberLabel;
@end

@interface UIWebDocumentView (Selecting)
-(BOOL)mouseEventsChangeSelection;
-(BOOL)shouldChangeSelectionForEvent:(GSEventRef)event;
-(CGRect)visibleRectForSelecting;
-(CGPoint)constrainedPoint:(CGPoint)point;
-(void)textLoupeTimerAction;
-(void)selectionMouseDown:(GSEventRef)down;
-(void)selectionMouseDragged:(GSEventRef)dragged;
-(void)selectionMouseUp:(GSEventRef)up;
-(BOOL)shouldUseTextLoupe;
-(void)updateTextLoupe:(CGPoint)loupe;
-(BOOL)autocorrectPromptCapturedMouseDown:(GSEventRef)down;
@end

@interface UIWebDocumentView (Style)
-(id)createCSSStyleDeclaration;
@end

@interface UIWebDocumentView (UIWebDocumentViewTextSelecting) <UITextSelectingContent, UIAutoscrollContainer>
-(void)selectWord;
-(CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;
-(CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;
-(void)selectionChanged;
-(void)selectionChanged:(id)changed;
-(void)clearSelection;
-(void)alterSelection:(CGPoint)selection granularity:(int)granularity;
-(void)setSelectionToNextGranularity:(CGPoint)nextGranularity;
-(int)selectionGranularity;
-(void)setSelectionGranularity:(int)granularity;
-(BOOL)selectionGranularityIncreasing;
-(void)setSelectionGranularityIncreasing:(BOOL)increasing;
-(BOOL)hasSelection;
-(BOOL)hasEditableSelection;
-(BOOL)hasMarkedText;
-(CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;
-(unsigned)selectionOffsetInMarkedText;
-(int)selectionState;
-(void)collapseSelection;
-(void)setCaretInsets:(UIEdgeInsets)insets;
-(UIEdgeInsets)caretInsets;
-(CGRect)caretRect;
-(CGRect)closestCaretRectForPoint:(CGPoint)point inSelection:(BOOL)selection;
-(BOOL)pointAtStartOfLine:(CGPoint)line;
-(BOOL)pointAtEndOfLine:(CGPoint)line;
-(BOOL)isPoint:(CGPoint)point inRange:(id)range;
-(int)selectionBaseWritingDirection:(BOOL*)direction;
-(void)toggleBaseWritingDirection;
-(void)setBaseWritingDirection:(int)direction;
-(void)setRangedSelectionBaseToCurrentSelection;
-(void)setRangedSelectionBaseToCurrentSelectionStart;
-(void)setRangedSelectionBaseToCurrentSelectionEnd;
-(void)clearRangedSelectionInitialExtent;
-(void)setRangedSelectionInitialExtentToCurrentSelectionStart;
-(void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
-(BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;
-(void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;
-(void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;
-(id)wordAtPoint:(CGPoint)point;
-(void)moveSelectionToStartOrEndOfCurrentWord;
-(id)selectionRectsForRange:(id)range;
-(id)selectionRects;
-(void)smartExtendRangedSelection:(int)selection;
-(void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;
-(void)setSelectionToEnd;
-(void)setSelectionToStart;
-(void)selectAll;
-(BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;
-(void)setAutoscrollContentOffset:(CGPoint)offset;
-(CGPoint)autoscrollContentOffset;
-(CGRect)contentFrameForView:(id)view;
-(void)startAutoscroll:(CGPoint)autoscroll;
-(void)cancelAutoscroll;
-(void)scrollSelectionToVisible:(BOOL)visible;
-(void)setSelectionWithPoint:(CGPoint)point;
-(CGRect)visibleBounds;
@end

