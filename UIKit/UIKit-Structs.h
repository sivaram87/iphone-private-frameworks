/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import <UIKit/UIKit.h>
#import <CoreGraphics/CoreGraphics.h>
#import <WebCore/WKTypes.h>
#import <WebCore/WKUtilities.h>
#import <GraphicsServices/GSEvent.h>
#import <GraphicsServices/GSHeartbeat.h>
#import <QuartzCore/QuartzCore.h>

typedef struct {
	unsigned char pathIndex;
	unsigned char pathIdentity;
	unsigned char pathProximity;
	float pathPressure;
	float pathMajorRadius;
	CGPoint pathLocation;
	void* pathWindow;
} UIPathInfo;
typedef UIPathInfo XXStruct__FxRIA;

typedef struct {
	int _field1;
	unsigned short _field2;
	unsigned short _field3;
	float _field4;
	float _field5;
	float _field6;
	float _field7;
	float _field8;
	float _field9;
	unsigned char _field10;
	unsigned char _field11;
	XXStruct__FxRIA _field12[0];
} XXStruct_$jUSvD;

typedef struct {
	float _field1;
	float _field2;
	float _field3;
	float _field4;
	float _field5;
} XXStruct_iyXfGC;

typedef struct {
	CGRect left;
	CGRect middle;
	CGRect right;
} XXStruct_UUz0SD;

typedef struct {
	int _field1;
	int _field2;
	int _field3;
	int _field4;
	BOOL _field5;
	BOOL _field6;
} XXStruct_7U_TLD;

typedef struct {
	BOOL _field1;
	BOOL _field2;
	BOOL _field3;
	float _field4;
	float _field5;
	int _field6;
	CGRect _field7;
	CGRect _field8;
} XXStruct_TF$i3B;

typedef struct {
	XXStruct_UUz0SD top;
	XXStruct_UUz0SD middle;
	XXStruct_UUz0SD bottom;
} XXStruct_4cr1oD;

typedef struct {
	BOOL _field1;
	union {
		struct {
			id _field1;
			id _field2;
		} _field1;
		GSEventRef _field2;
	} _field2;
} XXStruct_CKAdxD;

@class UIView, UIImage;
typedef union {
	UIImage* image;
	UIView* view;
} XXUnion_a01swB;

typedef struct {
	float _field1;
	float _field2;
	float _field3;
} XXStruct_NwkmQC;

typedef struct USet* USetRef;

@class NSString;
typedef struct {
	CGRect _field1;
	CGRect _field2;
	CGRect _field3;
	CGRect _field4;
	CGRect _field5;
	NSString* _field6;
	NSString* _field7;
	unsigned _field8;
	unsigned _field9;
	unsigned _field10;
	id _field11;
} XXStruct_MMLx8B;

typedef XXStruct_MMLx8B XXStruct_K4qLnD;

typedef struct _WKClassInfo* WKClassInfoRef;

typedef struct TiledSurface* TiledSurfaceRef;

@class WAKWindow;
typedef struct WKWindow {
	WKObject _field1;
	WAKWindow* _field2;
	CGRect _field3;
	WKViewRef _field4;
	WKViewRef _field5;
	TiledSurfaceRef _field6;
	unsigned _field7 : 1;
	unsigned _field8 : 1;
} WKWindow;

typedef struct {
	double width;
	double height;
} XXStruct_meWoWB;

#pragma mark UIKBLength, for use in UIKBGeometry only.

enum UIKBLengthUnit {
	UIKBLengthUnitPixel = 1,
	UIKBLengthUnitPercentage = 2,
};

typedef struct {
	float amount;
	int unit;
} UIKBLength;

static inline UIKBLength UIKBLengthMakePixel(float x) {
	UIKBLength r;
	r.amount = x;
	r.unit = UIKBLengthUnitPixel;
	return r;
}
static inline UIKBLength UIKBLengthMakePercentage(float x) {
	UIKBLength r;
	r.amount = x;
	r.unit = UIKBLengthUnitPercentage;
	return r;
}
static const UIKBLength UIKBLengthZero = {0, 0};

#pragma mark -

typedef struct {
	id _field1;
	unsigned _field2;
} XXStruct_HeigOC;

#if __IPHONE_OS_VERSION_MAX_ALLOWED > __IPHONE_3_0
typedef struct UINibDecoderObjectEntry {
	unsigned _field1;
	unsigned _field2;
} UINibDecoderObjectEntry;

typedef struct UINibDecoderValue {
	unsigned _field1;
	unsigned _field2;
} UINibDecoderValue;

typedef struct UINibArchiveTableInfo {
	unsigned count;
	unsigned offset;
} UINibArchiveTableInfo;

typedef struct UINibDecoderHeader {
	unsigned char type[10];
	unsigned formatVersion;
	unsigned coderVersion;
	UINibArchiveTableInfo objects;
	UINibArchiveTableInfo keys;
	UINibArchiveTableInfo values;
	UINibArchiveTableInfo classes;
} UINibDecoderHeader;

typedef struct UINibDecoderRecursiveState {
	int objectID;
	int nextGenericKey;
	unsigned nextValueSearchIndex;
	BOOL replaced;
} UINibDecoderRecursiveState;

typedef struct UIKeyToKeyIDCache {
	NSString* previousKey[64];
	void* previousKeyID[64];
	BOOL previousKeyExists[64];
	int hashHits;
	int hashHotMisses;
	int hashColdMisses;
} UIKeyToKeyIDCache;

typedef struct UIKeyAndScopeToValueCache {
	unsigned previousScope;
	unsigned previousKey;
	UINibDecoderValue* previousValue;
} UIKeyAndScopeToValueCache;

typedef struct UIStringIDTableBucket {
	NSString* _field1;
	unsigned _field2;
	struct UIStringIDTableBucket* _field3;
} UIStringIDTableBucket;
#endif

typedef struct {
	id _field1;
	id _field2;
	id _field3;
	id _field4;
} XXStruct_Xx1ZfA;

typedef struct {
	int _field1;
	int _field2;
	id _field3;
	id _field4;
	float _field5;
	int _field6;
	SEL _field7;
	id _field8;
} XXStruct_b4LybD;

typedef struct UIKeyboardAnimationGeometry {
	CGPoint _field1;
	CGPoint _field2;
	CGRect _field3;
	CGAffineTransform _field4;
} UIKeyboardAnimationGeometry;

//---------

@class UIKBKeyboard, UIKBKey, NSArray, NSString, NSBundle;

#if __cplusplus
extern "C" {
#endif

/*! Draw the keyboard background in the specified rectangle.
 @param style iPhone-Standard or iPhone-Alert
 */
	void UIKBDrawKeyboardBackground(CGContextRef context, CGRect region, NSString* style);
/// Currently draws nothing.
	void UIKBDrawKeyboardOverlay(CGContextRef context, CGRect region, NSString* style);
	void UIKBDrawKey(CGContextRef context, UIKBKeyboard* keyboard, UIKBKey* key, int x);

	NSArray* UIKeyboardGetActiveInputModes();
	NSString* UIKeyboardGetCurrentInputMode();
	void UIKeyboardSetCurrentInputMode(NSString* mode);
	NSString* UIKeyboardLocalizedInputModeName(NSString* mode);
	NSString* UIKeyboardLocalizedString(NSString* theString, NSString* language, NSString* passNil);
	NSObject* UIKeyboardLocalizedObject(NSString* key, NSString* language, NSString* passNil, NSString* alsoPassNil);
	NSString* UIKeyboardGetCurrentUILanguage();
	NSArray* UIKeyboardGetSupportedInputModes();
	void UIKeyboardSetActiveInputModes(NSArray* modes);
	NSBundle* UIKeyboardBundleForInputMode(NSString* mode);

	extern NSString* UIKeyboardStringDismiss;
	extern NSString* UIKeyboardStringConfirm;
	extern NSString* UIKeyboardStringNextCandidate;
	extern NSString* UIKeyboardKeyReturn;
	extern NSString* UIKeyboardKeySpace;
	
	typedef struct _UIKBTheme {
		// Foreground Gradient: For the background of the key.
		CGGradientRef backgroundGradient, foregroundGradient, shadowGradient;
		// Symbol color: For the font color of the key.
		CGColorRef backgroundColor, foregroundColor, highlightColor, symbolColor, symbolSecondaryColor;
		// Etch color: For the color of the key's label's shadow.
		CGColorRef etchColor, separatorLightColor, separatorMidColor, separatorDarkColor;
		
		uint32_t _30, _34, _38, _3c, _40, _44;
		
		CFStringRef fontName, fontSecondaryName;
		// Font size: the maximum font size.
		CGFloat fontSize, fontSecondarySize, fontKern, fontSecondaryKern, minFontSize;
		CGFloat keyRoundRectRadius;
		NSUInteger UID;
	}* UIKBThemeRef;
	UIKBThemeRef UIKBThemeCreate(UIKBKeyboard* keyboard, UIKBKey* key, int x);

	UIImage* _UIImageWithName(NSString* filename);
	
	/// Check the version of UIKit the application is linked to
	typedef enum {
		UIKitVersion2_0 = 0,
		UIKitVersion2_1 = 1,	// I'm not sure about these 3.
		UIKitVersion2_2 = 2,
		UIKitVersion3_0 = 3,
		UIKitVersion3_1 = 4,
	} UIKitVersion;
	BOOL _UIApplicationLinkedOnOrAfter(UIKitVersion version);

#if __cplusplus
}
#endif
